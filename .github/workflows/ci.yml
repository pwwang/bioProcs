name: CI

on:
  push:
  release:
    types: [published]

jobs:

  build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          auto-update-conda: true
      - name: Create conda environments and install biopipen
        run: |
          for envfile in tests/conda/env_*.yml; do
            bname=$(basename $envfile .yml)
            envname=biopipen-${bname:4}
            echo "::group::Creating environment: $envname"
            conda env create -f $envfile
            echo "::endgroup::"
            echo "::group::Installing biopipen in environment: $envname"
            conda run --no-capture-output -n $envname bash tests/conda/patch_poetry.sh
            conda run --no-capture-output -n $envname poetry install -E test -v
            echo "::endgroup::"
          done
      - name: List conda information
        run: |
          conda info
          conda env list
      - name: Cache reference data
        id: cache-reference
        uses: actions/cache@v3
        with:
          path: tests/data/reference
          key: reference-${{ hashFiles('tests/data/prep_reference.py') }}
      - name: Download reference data
        if: steps.cache-reference.outputs.cache-hit != 'true'
        run: |
          conda run --no-capture-output -n biopipen-bio python tests/data/prep_reference.py
      - name: Run tests
        run: |
          make -k VERBOSE=1

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'release'
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Publish to PyPI
        run: poetry publish --build -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}
        if: success()
